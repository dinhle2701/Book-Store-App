import { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';
import axios from 'axios';
import API_PATHS from '../constant/apiPath';

// ğŸ”¸ Láº¥y táº¥t cáº£ Ä‘Æ¡n hÃ ng cá»§a admin
export function useGetAllOrders() {
    return useQuery({
        queryKey: ['orders'],
        queryFn: () =>
            axios.get(`${API_PATHS.order}/orders`).then((res) => res.data),
    });
}

// ğŸ”¸ Láº¥y Ä‘Æ¡n hÃ ng theo email user
export function useGetOrdersByUser(email) {
    return useQuery({
        queryKey: ['orders', email],
        queryFn: () =>
            axios
                .get(`${API_PATHS.order}/orders/user/${encodeURIComponent(email)}`)
                .then((res) => res.data),
        enabled: !!email, // Chá»‰ cháº¡y khi cÃ³ email
    });
}

// ğŸ”¸ Láº¥y chi tiáº¿t Ä‘Æ¡n hÃ ng theo ID vÃ  email user
export const useGetOrderDetailByUser = (orderId, email) => {
    return useQuery({
        queryKey: ['order-detail-user', orderId, email],
        queryFn: async () => {
            const res = await axios.get(`${API_PATHS.order}/orders/user/order/${orderId}`, {
                headers: {
                    'X-User-Email': email
                }
            });
            return res.data;
        },
        enabled: !!orderId && !!email // Chá»‰ fetch náº¿u cÃ³ orderId vÃ  email
    });
};


// ğŸ”¸ Táº¡o má»›i Ä‘Æ¡n hÃ ng
export function useCreateOrder() {
    const queryClient = useQueryClient();
    return useMutation({
        mutationFn: (orderData) =>
            axios.post(`${API_PATHS.order}/orders`, orderData).then((res) => res.data),
        onSuccess: () => {
            queryClient.invalidateQueries(['orders']); // Refresh danh sÃ¡ch Ä‘Æ¡n hÃ ng admin
        },
    });
}
