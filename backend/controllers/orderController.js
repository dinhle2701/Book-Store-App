const Order = require('../models/Order');

// [POST] /api/orders - T·∫°o m·ªõi ƒë∆°n h√†ng
const Book = require('../models/Book'); // ƒë·∫£m b·∫£o b·∫°n ƒë√£ import model Book

exports.createOrder = async (req, res) => {
  try {
    const { name, email, phone, address, cartItems, status } = req.body;

    if (!name || !email || !address || !cartItems || cartItems.length === 0 || !status) {
      return res.status(400).json({ message: 'Thi·∫øu th√¥ng tin ƒë·∫∑t h√†ng' });
    }

    const total = cartItems.reduce((sum, item) => sum + item.price * item.quantity, 0);

    const newOrder = new Order({
      name,
      email,
      phone,
      address,
      cartItems,
      status,
      total,
    });

    const savedOrder = await newOrder.save();

    // üîÅ C·∫≠p nh·∫≠t s√°ch: gi·∫£m count, tƒÉng sold
    for (const item of cartItems) {
      const book = await Book.findById(item._id); // item._id l√† id c·ªßa book

      if (!book) continue;

      // N·∫øu s·ªë l∆∞·ª£ng mua v∆∞·ª£t qu√° s·ªë l∆∞·ª£ng c√≤n l·∫°i
      if (book.count < item.quantity) {
        return res.status(400).json({
          message: `S√°ch "${book.bookName}" ch·ªâ c√≤n l·∫°i ${book.count} cu·ªën`,
        });
      }

      book.count -= item.quantity;
      book.sold += item.quantity;

      await book.save();
    }

    res.status(201).json({
      message: 'ƒê·∫∑t h√†ng th√†nh c√¥ng',
      order: savedOrder,
    });
  } catch (error) {
    console.error('L·ªói khi ƒë·∫∑t h√†ng:', error);
    res.status(500).json({ message: 'L·ªói server khi t·∫°o ƒë∆°n h√†ng' });
  }
};


// [GET] /api/orders - L·∫•y to√†n b·ªô ƒë∆°n h√†ng (admin)
exports.getAllOrders = async (req, res) => {
  try {
    const orders = await Order.find().sort({ createdAt: -1 });
    res.status(200).json(orders);
  } catch (error) {
    console.error('L·ªói khi l·∫•y t·∫•t c·∫£ ƒë∆°n h√†ng:', error);
    res.status(500).json({ message: 'L·ªói server' });
  }
};

// [GET] /api/orders/user/:email - L·∫•y danh s√°ch ƒë∆°n h√†ng theo user
exports.getOrdersByUser = async (req, res) => {
  try {
    const { email } = req.params;
    console.log('Email nh·∫≠n ƒë∆∞·ª£c:', email);

    if (!email) {
      return res.status(400).json({ message: 'Thi·∫øu email ng∆∞·ªùi d√πng' });
    }

    const orders = await Order.find({ email }).sort({ createdAt: -1 });
    console.log('Orders t√¨m th·∫•y:', orders);

    if (orders.length === 0) {
      return res.status(404).json({ message: 'Kh√¥ng c√≥ ƒë∆°n h√†ng n√†o cho ng∆∞·ªùi d√πng n√†y' });
    }

    return res.status(200).json(orders);
  } catch (error) {
    console.error('L·ªói khi l·∫•y ƒë∆°n h√†ng c·ªßa user:', error);
    return res.status(500).json({ message: 'L·ªói server' });
  }
};



// [GET] /api/orders/user/order/:orderId?email=... - L·∫•y chi ti·∫øt ƒë∆°n h√†ng c·ª• th·ªÉ c·ªßa user
exports.getOrderDetailByUser = async (req, res) => {
  try {
    const { orderId } = req.params;
    const { email } = req.query;

    if (!email) {
      return res.status(400).json({ message: 'Thi·∫øu email ng∆∞·ªùi d√πng' });
    }

    const order = await Order.findOne({ _id: orderId, email });

    if (!order) {
      return res.status(404).json({ message: 'Kh√¥ng t√¨m th·∫•y ƒë∆°n h√†ng ph√π h·ª£p' });
    }

    res.status(200).json(order);
  } catch (error) {
    console.error('L·ªói khi l·∫•y chi ti·∫øt ƒë∆°n h√†ng:', error);
    res.status(500).json({ message: 'L·ªói server' });
  }
};
